name: Build and Release

on:
  workflow_dispatch:

env:
  VERSION: 1.0.0

jobs:
  build:
    name: Build & Package
    runs-on: ${{ matrix.platform }}
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            artifact_paths: target/release/tooka*_aarch64.dmg
          - platform: macos-13
            artifact_paths: target/release/tooka*_x64.dmg
          - platform: ubuntu-latest
            artifact_paths: |
              target/release/PKGBUILD
              target/release/tooka*_amd64.deb
              target/release/tooka*_x86_64.AppImage
          - platform: windows-latest
            artifact_paths: |
              target/release/tooka*_x64_en-US.msi
              target/release/tooka*_x64-setup.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl pkg-config

      - uses: dtolnay/rust-toolchain@stable

      - uses: swatinem/rust-cache@v2

      - name: Install app dependencies
        run: cargo install cargo-packager --locked

      - name: Package Binary
        run: cargo packager --release --verbose

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-release-artifacts
          path: ${{ matrix.artifact_paths }}

  cross_compile:
    name: Cross Compile & Package
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            target: aarch64-unknown-linux-gnu
            apt: gcc-aarch64-linux-gnu
            sysroot: /usr/aarch64-linux-gnu/
            pkg_arch: arm64
          - arch: riscv64
            target: riscv64gc-unknown-linux-gnu
            apt: gcc-riscv64-linux-gnu
            sysroot: /usr/riscv64-linux-gnu/
            pkg_arch: riscv64
          - arch: armv7
            target: armv7-unknown-linux-gnueabihf
            apt: gcc-arm-linux-gnueabihf
            sysroot: /usr/arm-linux-gnueabihf/
            pkg_arch: armhf

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential curl ${{ matrix.apt }}

      - uses: dtolnay/rust-toolchain@stable

      - uses: swatinem/rust-cache@v2

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Set PKG_CONFIG_SYSROOT_DIR
        run: echo "PKG_CONFIG_SYSROOT_DIR=${{ matrix.sysroot }}" >> $GITHUB_ENV

      - name: Install deb packager
        run: cargo install cargo-packager --locked

      - name: Package the cross-compiled build
        env:
          PKG_CONFIG_SYSROOT_DIR: ${{ matrix.sysroot }}
        run: cargo packager --target=${{ matrix.target }} --formats=deb --release --verbose

      - name: Upload cross-compile artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg_arch }}-cross-compile-artifacts
          path: target/release/tooka*.deb

  upload_to_release:
    name: Upload to GitHub Release
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [build, cross_compile]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create attestation for all builds
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: artifacts/*

      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          tag_name: Tooka v${{ env.VERSION }}
          files: artifacts/*
